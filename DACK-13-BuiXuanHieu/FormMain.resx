<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHYAAAB2CAYAAAAdp2cRAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAABBNJREFUeF7tndFx4kAQRAnhQrgQCOFCuBAcwoVwGdynC+6DEBwCISgEQtCnz/aH
        j9ZIBkMLA0JiZ6a76lXZYxvQNrs7O7vIs3B6Xc5n/xa/Zm9//2y/Xm+ptmy21Hvg+2r2tnyavSx+N7+P
        v5MK0vvq2+z58cfWmFVr2vsgYPbr8qF9dGlyPT9+b3vlcDP7wOPjeaQJhCFzbEMPQS+WwSMJQ+7Uhh6C
        55duKJtDkfDwBp+Wunk90kBZxnq/XtoHsmnpCmHotUyXN2wZrNtXK52lZj5tlh2sMUtD5p4lX6Z2yNwv
        ZZkva7yywZtR6pElSrzhfKCK1ZFQeCgx+70c1Zw/ZBkwCvasobyxaa9KCjAEf0Zr3K2st0YYgvdBdSp5
        bRnvbt44vkldV7beWkoN+NbU7VUm1MviJ2mQSCRd/virMF1G2qJF3GG4I+FwbHusrDFigekmlaKtXftI
        t6Ytf6/1NqSbZ+OUEL8iWYkxfuLUkSyBkrFBxRshJqmEdzJrhIikUp6hOF3yhE/BsYaIRtVecRJ5PbR2
        KenWsVH3YQ9Jty8bf8vOSFcrjnkk5hhcZzpFrxcn3o99OGqMWCQ+QB53PVvnHIY76ZRiUFkSxRvHLzpX
        3Char013auKU4pQYN7nn1kNh6OIN5QvdeITI+wG39AnTKfk9RL5qr0Dqlb+DbpXm1XPlx1yZerHKH5bX
        MvValbohj9clUwfKbjxSSk25zrfHOqbQO+67zVc3U4N66Uiy3ju1wUjkdJufSTS+wTjdIUPvKmxo3yaD
        NjNRAdOQW5iQ2FhpEr0ZPQ5J1/7ZKnwNEMfPV+3u0lxmSpIkSZIkSZIkSaPK6sfzj7Wr7QRhbQrYf6Hc
        Bz+ztawVN2w9C3BuSWeXJhAMREPvzINpMGe/ajQWm8Z4e158JEUlxquFxttVj6Y08Xxgdte7pR7tjMQQ
        Wp6J5wCj7RqS92i8061GG/FeFHUzdKfpzbHNPMUqnslIfHKaybEkzPFwjXeoXYTPOXN8qmZOdqFuWaLe
        eRk2Hxf4sUsYahmhDB0CMusi5uKdoajg8BcrrmF9H4MtIcJ9mmTomFgPnmiI1hw6PZiDRxNSdLyD2BOL
        qbjh7YUw7GrZUhLV8OFZw27JXNF71Uu9cMGn6GGq7bKwBxLlccYHr81ULWH8ceKGYeqp3un53wO2A8P+
        QHgBy9FPsuxXiVIM9rYEVXiIRPtfQ+Aw/wXhlSaRst0Z/gvCJ80GvobheDRJlNatEalhrLLhiNCg8A8N
        Cv/QoPAPDQr/0KDwDw0K/9Cg8A8NCv/QoPAPDQr/0KDwDw0K/9Cg8A8NCv/QoPAPDQr/0KDwDw0K/9Cg
        8A8NCv/QoPAPDQr/0KDwDw0K/9Cg8A8NCv/QoPAPDQrnLN//A9bXo5Lz5c/rAAAAAElFTkSuQmCC
</value>
  </data>
</root>